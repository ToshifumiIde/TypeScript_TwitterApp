[{"/Users/idetoshifumi/Desktop/twitter-app/src/index.tsx":"1","/Users/idetoshifumi/Desktop/twitter-app/src/app/store.ts":"2","/Users/idetoshifumi/Desktop/twitter-app/src/features/userSlice.ts":"3","/Users/idetoshifumi/Desktop/twitter-app/src/components/Feed.tsx":"4","/Users/idetoshifumi/Desktop/twitter-app/src/components/Auth.tsx":"5","/Users/idetoshifumi/Desktop/twitter-app/src/App.tsx":"6","/Users/idetoshifumi/Desktop/twitter-app/src/config/firebase.ts":"7"},{"size":648,"mtime":1611837256619,"results":"8","hashOfConfig":"9"},{"size":403,"mtime":1611839880707,"results":"10","hashOfConfig":"9"},{"size":1034,"mtime":1612072879124,"results":"11","hashOfConfig":"9"},{"size":289,"mtime":1611971503005,"results":"12","hashOfConfig":"9"},{"size":7669,"mtime":1612073587241,"results":"13","hashOfConfig":"9"},{"size":1199,"mtime":1611965064368,"results":"14","hashOfConfig":"9"},{"size":911,"mtime":1611841208705,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1afh8kz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/idetoshifumi/Desktop/twitter-app/src/index.tsx",[],["32","33"],"/Users/idetoshifumi/Desktop/twitter-app/src/app/store.ts",[],"/Users/idetoshifumi/Desktop/twitter-app/src/features/userSlice.ts",[],"/Users/idetoshifumi/Desktop/twitter-app/src/components/Feed.tsx",[],"/Users/idetoshifumi/Desktop/twitter-app/src/components/Auth.tsx",["34","35","36","37","38","39","40","41"],"import React, { useState } from \"react\";\nimport styles from \"./Auth.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { updateUserProfile } from \"../features/userSlice\";\nimport { auth, provider, storage } from \"../config/firebase\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Paper,\n  Grid,\n  Link,\n  Typography,\n  makeStyles,\n  Modal,\n  IconButton,\n  Box,\n} from \"@material-ui/core\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\nimport CameraIcon from \"@material-ui/icons/Camera\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link\n        color=\"inherit\"\n        href=\"https://toshifumiide-portfolio.web.app/\"\n        rel=\"noopener\"\n      >\n        Toshifumi Ide\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage:\n      \"url(https://images.unsplash.com/photo-1497215842964-222b430dc094?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Mzh8fGJ1c2luZXNzfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Auth: React.FC = () => {\n  const classes = useStyles();\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [username, setUserName] = useState<string>(\"\");\n  const [avatarImage, setAvatarImage] = useState<File | null>(null);\n  const [isLogin, setIsLogin] = useState<boolean>(true);\n\n  const signInEmail = async () => {\n    await auth.signInWithEmailAndPassword(email, password);\n  };\n  const signUpEmail = async () => {\n    const authUser = await auth.createUserWithEmailAndPassword(email, password);\n    let url = \"\";\n    if (avatarImage) {\n      const S =\n        \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n      const N = 16;\n      const randomChar = Array.from(crypto.getRandomValues(new Uint32Array(N)))\n        .map((n) => S[n % S.length])\n        .join(\"\");\n      const fileName = randomChar + \"_\" + avatarImage.name;\n      //firebaseの仕様で、元々あったファイル名と同様のファイル名が存在すると元々あったファイルが削除される。\n      //したがって、上記4つの処理を用いてユニークのfileNameを生成する\n      await storage.ref(`avatars/${fileName}`).put(avatarImage);\n      //生成したfileNameを用いて、refを生成し、avatarImageを.put()メソッドを用いて格納する\n      url = await storage.ref(\"avatars\").child(fileName).getDownloadURL();\n      //.getDownloadURL()で今格納した画像URLを取得可能\n    }\n    await authUser.user?.updateProfile({\n      displayName: username,\n      photoURL: url,\n      //firebaseが持つ.updateProfile()を用いて、authUserが持っているdisplayNameとphotoUrlを更新する\n    });\n    dispatch(\n      updateUserProfile({\n        displayName: username,\n        photoUrl: url,\n      })\n    );\n  };\n  const signInGoogle = async () => {\n    await auth.signInWithPopup(provider).catch((err) => {\n      alert(err.message);\n    });\n  };\n  const onChangeImageHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files![0]) {\n      setAvatarImage(e.target.files![0]);\n      //TypeScriptのNon-Nullアサーションオペレーター\n      //TypeScriptのコンパイラにnullまたはundefinedを追記することになる\n      //nullではないと明示するために!をつける\n      e.target.value = \"\";\n    }\n  };\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            {isLogin ? \"ログイン\" : \"ご登録\"}\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"メールアドレス\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={email}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"パスワード\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              startIcon={<EmailIcon />}\n              onClick={\n                isLogin\n                  ? async () => {\n                      try {\n                        await signInEmail();\n                      } catch (err) {\n                        alert(err.message);\n                      }\n                    }\n                  : async () => {\n                      try {\n                        await signUpEmail();\n                      } catch (err) {\n                        alert(err.message);\n                      }\n                    }\n              }\n            >\n              {isLogin ? \"ログイン\" : \"ご登録\"}\n            </Button>\n            <Grid container>\n              <Grid item xs={6}>\n                <span className={styles.login_reset} onClick={() => {}}>\n                  パスワードをお忘れですか？\n                </span>\n              </Grid>\n              <Grid item xs={false}>\n                <span\n                  className={styles.login_toggleMode}\n                  onClick={() => setIsLogin(!isLogin)}\n                >\n                  {isLogin ? \"アカウントを新たに作成\" : \"ログイン画面に移動\"}\n                </span>\n              </Grid>\n            </Grid>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={signInGoogle}\n            >\n              Googleアカウントでサインイン\n            </Button>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Auth;\n","/Users/idetoshifumi/Desktop/twitter-app/src/App.tsx",[],"/Users/idetoshifumi/Desktop/twitter-app/src/config/firebase.ts",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":21},{"ruleId":"46","severity":1,"message":"50","line":16,"column":3,"nodeType":"48","messageId":"49","endLine":16,"endColumn":8},{"ruleId":"46","severity":1,"message":"51","line":17,"column":3,"nodeType":"48","messageId":"49","endLine":17,"endColumn":13},{"ruleId":"46","severity":1,"message":"52","line":21,"column":8,"nodeType":"48","messageId":"49","endLine":21,"endColumn":16},{"ruleId":"46","severity":1,"message":"53","line":22,"column":8,"nodeType":"48","messageId":"49","endLine":22,"endColumn":18},{"ruleId":"46","severity":1,"message":"54","line":25,"column":8,"nodeType":"48","messageId":"49","endLine":25,"endColumn":25},{"ruleId":"46","severity":1,"message":"55","line":82,"column":20,"nodeType":"48","messageId":"49","endLine":82,"endColumn":31},{"ruleId":"46","severity":1,"message":"56","line":124,"column":9,"nodeType":"48","messageId":"49","endLine":124,"endColumn":29},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'IconButton' is defined but never used.","'SendIcon' is defined but never used.","'CameraIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'setUserName' is assigned a value but never used.","'onChangeImageHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]